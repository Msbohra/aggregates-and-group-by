---aggregations and summarization
--How many customers are purchasing on each market date 

select market_date , count(distinct customer_id) as count_cid
from `farmers_database.customer_purchases`
group by market_date
order by market_date


---without summarization 
--List of customers making purchase on each new date 
select distinct market_date , customer_id
from `farmers_database.customer_purchases`


select market_date , customer_id
from `farmers_database.customer_purchases`
group by 1 , 2
order by 1, 2
---Same results can be achieved with both group by and distinct 


----find out total quantity purchased by customer on each market date
select market_date , customer_id , sum(quantity)
from `farmers_database.customer_purchases`
group by 1,2
order by 1,2 

--find out total purchased by each customer on each market_date
select market_date , customer_id , count(*) as num_purchased 
from `farmers_database.customer_purchases`
group by 1,2


---Calculate total sales paid by cid 3 per market date 
select market_date , sum(quantity*cost_to_customer_per_qty) as total_sales
from `farmers_database.customer_purchases`
where customer_id = 3 
group by 1 
order by 1 

--For entire customerbase, customer id we want to understand how much quantity is purchased , average sales being spent 

select a.customer_id , round(sum(quantity),2) as total_qty , round(avg(quantity*cost_to_customer_per_qty),2) as avg_sale_per_cust
from `farmers_database.customer` a 
left join `farmers_database.customer_purchases` b
on a.customer_id = b.customer_id
group by 1
order by 1 

----MIN and MAX 
select customer_id , max(quantity) , min(quantity)
from `farmers_database.customer_purchases`
group by 1
order by 1 
---highest and lowest value of qty purchased for each customer using min and max 


